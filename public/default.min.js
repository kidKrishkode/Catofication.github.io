let mediaType, url, cat;
function CAT(){
  this.active = true;
  this.signal = null;
}
document.addEventListener("DOMContentLoaded",() => {
  cat = new CAT();
});
CAT.prototype.mediaChange = function(){
  return new Promise((resolve, reject) => {
    const fileInput = document.getElementById('file-input');
    const preview = document.querySelector('.preview');
    const placeholder = document.querySelector('.placeholder');
    const dropBox = document.querySelector('.drop-box');
    fileInput.addEventListener('change', (e) => {
      const file = e.target.files[0];
      if(file){
        const reader = new FileReader();
        reader.onload = () => {
          const dataURL = reader.result;
          preview.innerHTML = '';
          if(file.type.startsWith('image/')){
            const img = document.createElement('img');
            img.src = dataURL;
            preview.appendChild(img);
            mediaType = 'Image'; 
            url = dataURL;
            resolve([mediaType, url]);
          }
          placeholder.style.display = 'none';
        };
        reader.readAsDataURL(file);
      }
    });
  
    dropBox.addEventListener('dragover', (e) => {
      e.preventDefault();
    });
    
    dropBox.addEventListener('drop', (e) => {
      e.preventDefault();
      const file = e.dataTransfer.files[0];
      fileInput.files = e.dataTransfer.files;
      fileInput.dispatchEvent(new Event('change'));
    });
  });
}
CAT.prototype.engine_start = function(){
  cat.engine_active();
}
CAT.prototype.engine_active = function(){
  // let type = document.getElementById('media-type');
  // let acc = document.getElementById('media-acc');
  // let size = document.getElementById('media-size');
  // let dur = document.getElementById('media-due');
  cat.mediaChange().then(media => {
    if(media[0] == 'Image'){
      let temp = Filevalidation(30 * 1024, 5);
      if(temp>=0){
        // type.textContent = media[0].toString();
        // acc.textContent = "Accepted";
        cat.signal = true;
        // size.textContent = temp+' Kb';
        // dur.textContent = 'Static';
      }else{
        inValidsizeError(temp);
        cat.signal = false;
      }
    }else{
      console.warn("Engine not work!");
      cat.signal = false;
    }
  }).catch(e => {
    console.log(e);
  });
}
function inValidsizeError(message){
  let acc = document.getElementById('media-acc');
  let size = document.getElementById('media-size');
  acc.textContent = message;
  size.textContent = 'Null';
}
function Filevalidation(max, min){
  const fi = document.getElementById('file-input');
  if(fi.files.length > 0){
    for(let i = 0; i <= fi.files.length - 1; i++){
      const fsize = fi.files.item(i).size;
      const file = Math.round((fsize / 1024));
      if(file >= max){
        return "File too Big, please select a file less than 4mb";
      }else if(file < min){
        return "File too small, please select a file greater than 2mb";
      }else{
        return file;
      }
    }
  }
}